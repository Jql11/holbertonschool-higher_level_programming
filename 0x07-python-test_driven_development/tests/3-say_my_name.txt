task 3 Write a function that prints My name is <first name> <last name>

>>> say_my_name = __import__('3-say_my_name').say_my_name

SUCESS CASES:

Test with strings:
	>>> say_my_name("John", "Smith")
	My name is John Smith
	>>> say_my_name("Alice")
	My name is Alice 

FAILED CASES:

test with other datatype(None, number, list, set, dic, bool):
	>>> say_my_name(None, "Smith")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string
	>>> say_my_name(12, "Smith")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string
	>>> say_my_name("John", ["Smith"])
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
	>>> say_my_name("John", {"Smith"})
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
	>>> say_my_name("John", {1:"Smith"})
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
	>>> say_my_name("John", False)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
	>>> say_my_name(100, False)
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Test with no arg or empty string
	>>> say_my_name()
        Traceback (most recent call last):
        ...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
	>>> say_my_name("Alice", "Bob", "Cara")
        Traceback (most recent call last):
        ...
	TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
	>>> say_my_name("", "Smith")
        Traceback (most recent call last):
        ...
	TypeError: first_name must be a string
