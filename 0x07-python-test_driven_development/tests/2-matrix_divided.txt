task 1 Write a function that divides all elements of a matrix.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS CASES:

When matrix is a list of lists of signed and unsigned integers or floats
each row has the same size
div is an integer or float and is not 0

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix = [[1, 2.5, 3], [4.8, 5, 6]]
        >>> matrix_divided(matrix, 3)
	[[0.33, 0.83, 1.0], [1.6, 1.67, 2.0]]
	>>> matrix = [[-1, 2.5, 3], [4.8, -5.4, 6]]
        >>> matrix_divided(matrix, 3)
        [[-0.33, 0.83, 1.0], [1.6, -1.8, 2.0]]
	>>> matrix = [[1, True, 3], [4, False, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.33, 1.0], [1.33, 0.0, 2.0]]
	>>> matrix = [[1, float('-inf'), 3], [4, float('inf'), 6]]
        >>> matrix_divided(matrix, 3)
        [[0.33, -inf, 1.0], [1.33, inf, 2.0]]

Failed CASES:

Test with div == 0, other datatype(None, string, set, list), no div or extra div

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, None)
        Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, "hey")
        Traceback (most recent call last):
        ...
        TypeError: div must be a number
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, {2})
        Traceback (most recent call last):
        ...
        TypeError: div must be a number
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, [2])
        Traceback (most recent call last):
        ...
        TypeError: div must be a number
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix)
        Traceback (most recent call last):
        ...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3, 4)
        Traceback (most recent call last):
        ...
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test ele in matrix with other datatype(string, None, complex, list, set, dic)
	>>> matrix = [[1, "hello", 3], [4, "world", 6]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1, None, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1, 2+3j, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1, [1], 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1, {1}, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1, {1:'Hi'}, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with other type
	>>> matrix = ([1, 2, 3], [4, 5, 6])
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = {1, 2, 3, 4, 5, 6}
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [(1, 2, 3), [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [(1, 2, 3), [4, 5, 6]]
        >>> matrix_divided(3, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with empty list
	>>> matrix = []
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different size of rows
	>>> matrix = [[1, 2], [3, 4, 5]]
	>>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
	TypeError: Each row of the matrix must have the same size
