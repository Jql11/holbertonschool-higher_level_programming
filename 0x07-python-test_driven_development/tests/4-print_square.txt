task 3 print square

>>> print_square = __import__('4-print_square').print_square

SUCCESS CASES:

Test with unsigned size:
	>>> print_square(2)
	##
	##
	>>> print_square(0)

Failed cases:

Test with negative size:
	>>> print_square(-1)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Tes with size that is not an integer:
	>>> print_square()
	Traceback (most recent call last):
        ...
	TypeError: print_square() missing 1 required positional argument: 'size'
	>>> print_square("hey")
	Traceback (most recent call last):
        ...
	TypeError: size must be an integer
	>>> print_square([2])
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square({2})
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square(None)
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square(2+3j)
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square({1:"hey"})
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square(float('inf'))
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	>>> print_square(1.5)
        Traceback (most recent call last):
        ...
        TypeError: print_square() missing 1 required positional argument: 'size'

Test with extra argument
	>>> print_square(1, 2)
        Traceback (most recent call last):
        ...
        TypeError: print_square() takes 1 positional argument but 2 were given
